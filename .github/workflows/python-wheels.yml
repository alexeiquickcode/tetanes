name: Build Python Wheels

on:
  push:
    branches: [main]
    tags:
      - 'v*'
  pull_request:
    branches: [main]
  workflow_dispatch:

env:
  PACKAGE_DIR: tetanes-python

jobs:
  build-wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.9', '3.11', '3.12']

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install maturin pytest numpy gymnasium

      - name: Build wheels
        working-directory: ${{ env.PACKAGE_DIR }}
        run: |
          maturin build --release --out dist --interpreter python${{ matrix.python-version }}

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}-py${{ matrix.python-version }}
          path: ${{ env.PACKAGE_DIR }}/dist/*.whl

  build-sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install maturin

      - name: Build sdist
        working-directory: ${{ env.PACKAGE_DIR }}
        run: maturin sdist --out dist

      - name: Upload sdist
        uses: actions/upload-artifact@v4
        with:
          name: sdist
          path: ${{ env.PACKAGE_DIR }}/dist/*.tar.gz

  build-manylinux:
    name: Build manylinux wheels
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [x86_64, aarch64]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist
          sccache: 'true'
          manylinux: auto
          working-directory: ${{ env.PACKAGE_DIR }}

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-manylinux-${{ matrix.target }}
          path: ${{ env.PACKAGE_DIR }}/dist/*.whl

  merge-artifacts:
    name: Merge all wheel artifacts
    needs: [build-wheels, build-sdist, build-manylinux]
    runs-on: ubuntu-latest
    steps:
      - name: Merge Artifacts
        uses: actions/upload-artifact/merge@v4
        with:
          name: python-wheels
          pattern: wheels-*
          delete-merged: true

      - name: Merge SDist
        uses: actions/upload-artifact/merge@v4
        with:
          name: python-package
          pattern: sdist

  create-release:
    name: Create GitHub Release with wheels
    needs: [merge-artifacts]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    permissions:
      contents: write
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: python-package
          path: dist

      - uses: actions/download-artifact@v4
        with:
          name: python-wheels
          path: dist

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: dist/*
          generate_release_notes: true